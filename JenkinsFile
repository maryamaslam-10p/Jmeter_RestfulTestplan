pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/maryamaslam-10p/Jmeter_RestfulTestplan.git'
            }
        }

        stage('Prepare CSV') {
            steps {
                withCredentials([file(credentialsId: 'jmeter-csv-creds', variable: 'USER_CSV')]) {
                    bat """
                        if not exist "%WORKSPACE%\\RestfulBookingPerformance\\csv_data" mkdir "%WORKSPACE%\\RestfulBookingPerformance\\csv_data"
                        copy "%USER_CSV%" "%WORKSPACE%\\RestfulBookingPerformance\\csv_data\\users123.csv"
                    """
                }
            }
        }

        stage('Run JMeter Test') {
            steps {
                bat """
                    jmeter -n -t "%WORKSPACE%\\RestfulBookingPerformance\\test_plans\\Restful_Testplan.jmx" ^
                           -l "%WORKSPACE%\\RestfulBookingPerformance\\results.jtl" ^
                           -j "%WORKSPACE%\\RestfulBookingPerformance\\jmeter.log"
                """
            }
        }

        stage('Publish Report') {
    steps {
        script {
            // generate timestamp, e.g. 20250926_174500
            def timestamp = new Date().format("yyyyMMdd_HHmmss")

            // define a unique report directory
            def reportDir = "RestfulBookingPerformance/html_report_${timestamp}"

            // generate HTML report
            bat """
                jmeter -g "%WORKSPACE%\\RestfulBookingPerformance\\results.jtl" ^
                       -o "%WORKSPACE%\\${reportDir}"
            """

            // publish it in Jenkins
            publishHTML([allowMissing: false, alwaysLinkToLastBuild: true, keepAll: true,
                         reportDir: reportDir,
                         reportFiles: 'index.html',
                         reportName: "JMeter HTML Report - ${timestamp}"])
        }
    }
}

    }
}
